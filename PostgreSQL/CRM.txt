-- Database: CRM

-- DROP DATABASE IF EXISTS "CRM";

CREATE DATABASE "CRM"
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_India.1252'
    LC_CTYPE = 'English_India.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
	
	
create table person(
	person_id int primary key,
	first_name varchar(25) not null,
	last_name varchar(25) not null,
	gender char(1) not null,	
	date_of_birth date,
	email varchar(32),
	contact_no bigint not null,
    address  varchar(35) 
);


create table plan(
	plan_id int primary key,
	plan_name varchar(20) not null,	
	plan_validity varchar(30) not null,
	plan_data varchar(20) not null,
	plan_price char(15) not null 
);


create table lead(
	lead_id int primary key,
	created_at date not null,
	person_id int references person(person_id)
);


create table opportunity(
	opportunity_id int primary key,
	created_at date not null,
	emp_id int , 
	lead_id int references lead(lead_id),
	plan_id int references plan(plan_id)
);


create table customer(
	customer_id int primary key,
	cust_username varchar(25) not null,
	cust_password varchar(25) not null,
	ac_details varchar(20) not null,
	opportunity_id int references opportunity(opportunity_id),
	plan_id int references plan(plan_id)
);


create table employee(
	emp_id int primary key,
	designation varchar(30) not null,
	person_id int references person(person_id),
	customer_id int references customer(customer_id)
);


create table task(
	task_id int primary key,
	task_name varchar(25) not null,
	task_desc varchar(25) not null,
	task_status varchar(20) not null,
	start_date date,
	expected_end_date date,
	actual_end_date date,
	assigned_by varchar(25) not null,
	module_id int not null,
	module_name varchar(20),
	emp_id int references employee(emp_id)
);


INSERT INTO person(person_id,first_name,last_name,gender,date_of_birth,email,contact_no,address)
VALUES(1,'Ayush', 'Mohta', 'M', '1999-07-12', 'mohtaayush12@gmail.com', 9352352751, 'Jodhpur'), 
	(2, 'abc' , 'bcd', 'M', '1990-11-15', 'abcbcd@gmail.com', 1122334455, 'Jaipur'), 
	(3, 'pqr' , 'rst', 'M', '1993-01-21', 'pqrrst@yahoo.in', 9876543210, 'Pune'),
	(4, 'jkl' , 'klm', 'F', '1997-02-16', 'jklklm@gmail.com', 123456789, 'Lonavala'),
	(5, 'mno' , 'mno', 'M', '1990-11-15', 'mnomno@gmail.com', 1122334455, 'Jaipur'), 
	(6, 'xyz' , 'xyz', 'M', '1993-01-21', 'xyzxyz@yahoo.in', 9876543210, 'Pune'),
	(7, 'tuv' , 'tuv', 'F', '1997-02-16', 'tuvtuv@gmail.com', 123456789, 'Lonavala'),
	(8, 'def' , 'def', 'M', '1990-11-15', 'def@gmail.com', 1122334455, 'Jaipur'), 
	(9, 'qwerty' , 'qwerty', 'M', '1993-01-21', 'qwerty@yahoo.in', 9876543210, 'Pune'),
	(10, 'asdf' , 'asdf', 'F', '1997-02-16', 'asdf@gmail.com', 123456789, 'Lonavala');


INSERT INTO lead 
VALUES (1, '2021-10-31', 3),
(2, '2021-11-15', 4),
(3, '2021-09-17', 5),	
(4, '2021-08-09', 6),
(5, '2021-12-3', 7),
(6, '2021-07-22', 8);


INSERT INTO plan 
VALUES(1, '40Mbps', '2 month', '180GB' , 399),
(2, '80Mbps', '84 DAYS', 'unlimited' , 399),
(3, '160Mbps', '6 months', '900GB' , 699),
(4, '200Mbps', '12 month', '12180GB' , 15999),
(5, '150Mbps', '9 month', '6000GB' , 9999);


INSERT INTO opportunity
VALUES(1, '2021-09-20', 3, 2, 2),
(2, '2021-08-15', 4, 1, 2),
(3, '2021-12-10', 5, 4, 5),
(4, '2021-07-25', 6, 5, 1);


INSERT INTO customer 
VALUES(1, 'Ayush' , 'ayushMohta', '9828881005', 3, 4),
(2, 'Aashish', 'AashishThakur', '1234567890', 4, 5 ),
(3, 'Test', 'test', '9876543210', 2, 5 );


INSERT INTO employee
VALUES(1, 'Computer Operator', 1, 2),
(2, 'Engineer', 2, 1);


INSERT INTO task(task_id,task_name,task_desc,task_status,start_date,expected_end_date,actual_end_date,assigned_by,module_id,module_name,emp_id) 
VALUES(1, 'Installation', 'Installing new Fibre','completed', '2021-07-26' ,'2021-08-30','2021-09-01', 'admin1', 011, 'INSTALL', '1'),
(2, 'Inspection', 'Inspecting performance','pending', '2021-07-26' ,'2021-08-30','2021-12-15', 'admin1', 012, 'INSPECT', '1')



------------ Queries -------------------------



-- Query to convert Lead to Opportunity, Account
select le.lead_id ,le.created_at, le.person_id, opp.opportunity_id, opp.plan_id
from lead le join opportunity opp using(lead_id);


-- Query to get a list of all leads
select * from lead;
	
	
-- Query to get all leads which converted to Opportunity
select le.lead_id ,le.created_at, le.person_id, opp.opportunity_id, opp.plan_id
from lead le join opportunity opp using(lead_id);
	
	
-- Query to get all leads converted to Account	
select le.lead_id ,le.created_at, le.person_id, cus.customer_id, opp.opportunity_id from lead le
join opportunity opp using(lead_id)
join customer cus ON using(opportunity_id);
	
	
-- Query to get All contacts of an Account
select le.lead_id ,le.created_at, le.person_id, cus.customer_id, op.opportunity_id
from lead le
join opportunity op using(lead_id)
join customer cus using(opportunity_id);	
	
	
-- Query to get the count of task Module wise
select module_id,module_name count(task_id) from task group by module_id,module_name;

	
-- Query to get All tasks of Leads, Opportunity, Account



-- Query to get all accounts that do not have contacts
select cus.customer_id , pe.person_id, pe.contact_no, pe.first_name
	from customer cus 
	join opportunity opp ON opp.opportunity_id = cus.opportunity_id
	join lead le ON  le.lead_id = opp.lead_id
	join person pe ON  pe.person_id=  le.person_id
	where pe.contact_no = 0;



-- Query to get all task which is not created today.
select * from task where start_date != current_date;


-- Query to get all the task completed
select * from task where task_status = 'completed';


--Query to get all upcoming tasks
select * from task where start_date > current_date;


-- Query to fetch account and its contacts with account id, account name
select cus.customer_id , cus.ac_details, pe.contact_no, pe.first_name
	from customer cus 
	join opportunity opp ON opp.opportunity_id = cus.opportunity_id
	join lead le ON  le.lead_id = opp.lead_id
	join person pe ON  pe.person_id=  le.person_id;


-- Query to get the count of leads which is converted to account
select count(le.lead_id) 
from lead le
join opportunity opp ON opp.lead_id = le.lead_id
join customer cus ON cus.opportunity_id = opp.opportunity_id;


-- Query to get all Opportunity
select * from opportunity;


-- Query to get all Opportunity which converted to Account
select cus.customer_id, opp.opportunity_id, cus.cust_username from opportunity opp 
join customer cus ON cus.opportunity_id = opp.opportunity_id;


-- Query to get count which plan is taken how many times
select plan_id, plan_name, plan_validity, plan_data, count(plan_id) from customer join plan using(plan_id) group by plan_id, plan_name, plan_validity, plan_data;


